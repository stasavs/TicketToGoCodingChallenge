{
    "openapi": "3.0.0",
    "info": {
        "title": "TicketGo Coding Challenge",
        "description": "This is the TicketGo Coding Challenge API documentation for the coding challenge project.",
        "contact": {
            "email": "stasavujicic@gmail.com"
        },
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "Local API Server"
        }
    ],
    "paths": {
        "/api/posts": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get list of posts",
                "description": "Returns paginated list of posts with authors and comments",
                "operationId": "getPostsList",
                "parameters": [
                    {
                        "name": "author_id",
                        "in": "query",
                        "description": "Filter posts by author id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Filter posts by title",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object"
                                        },
                                        "links": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "author_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected author id is invalid."
                                                    }
                                                },
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title may not be greater than 255 characters."
                                                    }
                                                },
                                                "page": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The page must be an integer."
                                                    }
                                                },
                                                "per_page": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The per page may not be greater than 100."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CommentResource": {
                "title": "CommentResource",
                "description": "Comment resource schema",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Jane Smith"
                    },
                    "text": {
                        "type": "string",
                        "example": "Great post!"
                    }
                },
                "type": "object"
            },
            "PostResource": {
                "title": "PostResource",
                "description": "Post resource schema",
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "TicketGo Rules"
                    },
                    "author": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "comments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommentResource"
                        }
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Posts",
            "description": "Posts"
        }
    ]
}